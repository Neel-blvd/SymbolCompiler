lexer grammar ExprLexer;

LESS : '<';
GREATER : '>';
MULS : '*' ;
DIVIDES : '/' ;
MINUS : '-';
PLUS : '+';
OR : 'or' ;
AND : 'and';
NOT : '~' ;
DEF : 'funct';
SC : ';';
EQ : '=';
COMMA : ',' ;
LPAREN : '(' ;
RPAREN : ')' ;
LCURLY : '{' ;
RCURLY : '}' ;
CONST : 'triple_equal';
FALSE : 'four_dots_around_cross';
TRUE : 'four_dots_around_add';
READ : 'left_triangle';
BREAK : 'undertie';
STRING : 'two_asterisk';
ELSE : 'left_arrow';
FOR : 'phi';
INT : 'circle';
INTEGER :[0-9]+;
RETURN : 'inverted_qmark';
WHILE : 'sigma';
FUNCTION : 'music';
COMMENT : 'triple_slash';
BOOL     : 'omega';
CHAR     : 'square';
CONTINUE : 'two_tie';
FLOAT    : 'two_vertical_plus';
IF       : 'right_arrow';
NONE     : 'theta';
VOID     : 'sleeping_eight' ;
PROGRAM  : 'pentagon';
WRITE    : 'write';
ID : [a-zA-Z_][a-zA-Z_0-9]* ;
WS : [ \t\n\r\f]+ -> skip ;
